// Реверс (переворот) информации в массиве во введенном интервале [i1 , i2]
// i1, i2 - границы интервала (вводятся с клавиатуры)
#include <stdio.h>
#include <conio.h>
#include <windows.h>
#include <locale.h>
#define kl 10        // размерность массива (глобальная константа)

int main()
{
	setlocale(LC_ALL, "Russian");     // русификация вывода информации на экран
	int ms[kl], i, i1, i2, kk;        // объявление локальных данных
	printf("\nВведите массив");       // приглашение на ввод массива
	for (i = 0; i<kl; i++)            // цикл по ввода массива поэлементно
	{
		printf("\nВведите ms[%d] = ", i);
		scanf("%d", &ms[i]);
	}
	do                                 // цикл ввода чисел (границ интервала)  
	{	                               // с проверкой на корректность ввода
		system("CLS");                 // очистка экрана
		printf("введите 2 числа (первое меньшее, второе большее)\n");
		fflush(stdin);                     // чистка буфера ввода
		kk = scanf_s("%d%d", &i1, &i2);    // ввод границ интервала последовательности (массива)
	} while (kk<2 || i1>i2);               // цикл повторяется пока корректно введено меньше 2 чисел
	                                       // или индекс начала интервала > индекса конца интервала
	system("CLS");
	printf("\nИсходный масссив : ");     // вывод исходного массива
	for (i = 0; i < kl;  i++)            // цикл по строкам массива
		printf("%4d", ms[i]);
	printf("\n");
	for (; i1 < i2; i1++, i2--)          // цикл пока i1 < i2, т.е. пока границы (левая и правая)
	{                                    // не сойдутся
		kk = ms[i1];                     // запоминаем значение элемента по индексу i1 в kk
		ms[i1] = ms[i2];                 // заносим в элемент с индексом i1 значение элемента с индексом i2 
		ms[i2] = kk;                     // переписываем значение из kk в элемент с индексом i2
	}
	
	printf("\nПреобразованный массив : ");  // вывод массива
	for (i = 0; i<kl; i++)               // цикл по строкам массива
		printf("%4d", ms[i]);
	printf("\n");
	return 0;
}