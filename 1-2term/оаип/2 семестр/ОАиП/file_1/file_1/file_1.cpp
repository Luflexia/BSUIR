#include <stdio.h>
#include <malloc.h>
#include <string.h>
#include <io.h>
#include <locale.h>
// --------------------------------------------  ТЕКСТОВЫЙ ФАЙЛ ------------------------------------------------
//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f;
//	int ms[] = { 52, 53, 55, 57, 125 };
//	int i,a;
//	f = fopen("aaa", "w+");
//	for (i = 0; i < sizeof(ms) / sizeof(int); i++)
//		putw(ms[i], f);
//		//putc(ms[i], f);
//	fclose(f);
//	f = fopen("aaa", "r+");
//	rewind(f);
//	while (1)   // !!!!!!!!!!!!!!!!!!!!!!!!!!!!
//	{
//		a=getw(f);
//		if (feof(f)) break;
//		printf("%d ",a);
//		//if (feof(f)) break;
//	}
//	fclose(f);
//}

//===================================  пример 1  ====================================================
// создать ТЕКСТОВЫЙ файл, содержащий несколько чисел по возрастанию, далее вводить
//  новые числа и добавлять их в файл без нарушения упорядоченности в файле
//void print(FILE *ff)
//{
//	int i;
//	if (!ff) return;
//	rewind(ff);
//	printf("|");
//	while(1)
//	{  fscanf(ff, "%d", &i);
//	   printf("%3d", i);
//	   if(feof(ff)) break;
//	}
//	printf("|");
//}
//
//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f;
//	int a = 2, b = 3, c = 5, d=7, e=12;
//      int ms[]={2, 3, 5, 7, 12};
//	int i, j;
//	fpos_t l1, l2;              // тип позиция в файле
//	f = fopen("aaa", "w+");
//	//  fprintf(f,"%3d%3d%3d%3d%3d",a,b,c,d,e); // вариант 1 - запись в файл переменных 
//    for (i = 0; i<sizeof(ms)/sizeof(int); i++)  // вариант 2 - запись в файл массива чисел 
//       fprintf(f, "%3d", ms[i]);
//  //	while(1)
//  //	{                         // вариант 3 - запись в файл чисел введенных с клавиатуры
//		//fgetpos(f,&l1);
//	    //scanf("%d", &a);       
//        //if (a == 999) break;
//		//if (l1 == 0 || a > b)
//		//{
//		//	fprintf(f, "%3d", a);
//		//	b = a;
//		//}
//		//else puts("ошибка");
//  //	}
//	while (1)
//	{  
//		print(f);
//		printf("\nвводите число : ");
//		scanf("%d", &i);
//		if (i == 999) break;         // выход из программы
//		rewind(f);	                 // установка УТПФ в начало файла и сброс
//		do                           // признака конца файла
//		{
//			fgetpos(f, &l1);         // УТПФ на начало поля считываемого числа
//			fscanf(f, "%d", &j);        // ввод очередного числа для занесения в файл 
//			if (feof(f) || j>i)  break; // выход либо по концу файла либо найдена позиция
//		} while (1);                    // числа большего введенного с клавиатуры
//		rewind(f);                    // УТПФ на начало файла + сброс ошибки
//		if (j<i)                      // EOF и в файле нет числа > чем введенный i
//		{
//			fseek(f, 0, 2);           // УТПФ на конец файла (установка в конец файла)
//			fprintf(f, "%3d", i);     // дозапись в конец файла
//			continue;
//		}
//		fseek(f, -3, 2);               // УТПФ на последний элемент файла
//		do                             // цикл сдвига всех чисел в массиве в конец на один
//		{
//			fgetpos(f, &l2);           // l2 позиция УТПФ числа 
//			fscanf(f, "%d", &j);       // считывание из файла числа с позиции l2 
//			rewind(f);                 // сброс возможной ошибки (выход из файла)
//			l2 += 3;                   // номер позиции следующей за l2
//			fsetpos(f, &l2);           // УТПФ в новую позицию l2 (следующую)
//			fprintf(f, "%3d", j);      // запись в нее считанного выше числа
//			fseek(f, l2 - 6, 0);       // УТПФ в позицию (-3 + -3) для считывания нового числа
//		} while (l1<=l2 - 6);          // сдвиг в файле до позиции l1 (найдена при вводе числа i) 
//		fseek(f, l2 - 3, 0);     // УТПФ на позицию "освободившегося" места в файле
//		fprintf(f, "%3d", i);    // запись i на место числа с которого
//	}	                         // произведен сдвиг всех чисел вниз
//	print(f);
//	fclose(f);
//}



//===================================  пример 2  ====================================================
// как и в примере выше, создать ТЕКСТОВЫЙ файл, содержащий несколько чисел 
// (одноразрядные и двухразрядные) по возрастанию, далее вводить и добавлять 
// в файл новые числа размещая их без нарушения упорядоченности в файле

//void print(FILE *ff)
//{
//	int i;
//	if (!ff) return;
//	rewind(ff);
//	printf("|");
//	while (1)
//	{
//		fscanf(ff, "%d", &i);
//		if (feof(ff)) break;
//		printf("%-3d", i);
//	}
//	printf("|");
//}
//
//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f;
//	int ms[]={2, 7, 12};
//	int i, j;
//	fpos_t l1, l2;              // тип позиция в файле
//	f = fopen("aaa", "w+");
//    for (i = 0; i<sizeof(ms)/sizeof(int); i++) 
//	   fprintf(f, "%-3d", ms[i]);
//	while (1)
//	{
//		print(f);
//		printf("\nвводите число : ");
//		scanf("%d", &i);
//		if (i == 999) break;       // выход из программы
//		if (i >= 100) continue;    // запись в файл только одноразрядных и двухразрядных чисел
//		rewind(f);	               // установка УТПФ в начало файла и сброс
//		do                         // признака конца файла
//		{
//			fgetpos(f, &l1);       // УТПФ на начало поля считываемого числа
//			fscanf(f, "%d", &j);
//			fgetpos(f, &l2);
//			if (feof(f) || j>i)  break; //выход либо по концу файла либо найдена позиция
//			l1 += 3;                  // "индекс" начала следующего числа в файле 
//			fsetpos(f, &l1);          // установка УТПФ перед следующим часлом
//		} while (1);
//		rewind(f);                    // УТПФ на начало файла + сброс ошибки
//		if (j<i)                      // EOF и в файле нет числа > чем введенный i
//		{
//			fseek(f, 0, 2);           // УТПФ на конец файла (установка в конец файла)                      
//			fprintf(f, "%-3d", i);    // дозапись в конец файла
//			continue;
//		}
//		fseek(f, -3, 2);               // УТПФ на последний элемент файла
//		do                             // цикл сдвига всех чисел в массиве в конец на один
//		{
//			fgetpos(f, &l2);           // l2 позиция УТПФ числа 
//			fscanf(f, "%d", &j);       // считывание из файла числа с позиции l2 
//			rewind(f);                 // сброс возможной ошибки (выход из файла)
//			l2 += 3;                   // номер позиции следующей за l2
//			fsetpos(f, &l2);           // УТПФ в новую позицию l2 (следующую)
//			fprintf(f, "%-3d", j);     // запись в нее считанного выше числа
//			fseek(f, l2 - 6, 0);       // УТПФ в позицию (-3 + -3) для считывания нового числа
//		} while (l1<l2 - 3);           // сдвиг в файле до позиции l1 (найдена при вводе числа i) 
//		fseek(f, l2 - 3, 0);           // УТПФ на позицию "освободившегося" места в файле
//		fprintf(f, "%-3d", i);         // запись i на место числа с которого
//		                               // произведен сдвиг всех чисел вниз
//	}	                         
//	print(f);
//	fclose(f);
//}



//===================================  пример 3  ====================================================
// имеются 2 файла упорядоченые по возрастанию,
// переписать их в результирующий без нарушения упорядоченности

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f1, *f2, *f3;
//	int i1, i2;
//	int m1[] = {1 ,2 ,4 ,6},
//		m2[] = {1 ,3 };
//	char cc;
//	if (!(f1 = fopen("a", "w+")) ||
//		!(f2 = fopen("aa", "w+")) ||
//		!(f3 = fopen("aaa", "w+")))
//	{
//		puts("error");
//		return 0;
//	}
//	for (i1 = 0; i1<sizeof(m1)/sizeof(int); i1++) fprintf(f1, "%-2d", m1[i1]);
//	for (i1 = 0; i1<sizeof(m2) / sizeof(int); i1++) fprintf(f2, "%-2d ", m2[i1]);
//
//	rewind(f1); rewind(f2);
//	fscanf(f1, "%d", &i1);
//	fscanf(f2, "%d", &i2);
//	do
//	{	while (!feof(f1) && i1<i2)
//		{	fprintf(f3, "%-2d", i1);
//			fscanf(f1, "%d", &i1);
//		}
//		if (feof(f1)) break;
//
//		while (!feof(f2) && i1 >= i2)
//		{	fprintf(f3, "%-2d", i2);
//			fscanf(f2, "%d", &i2);
//		}
//	} while (!feof(f2));
//
//	while (!feof(f1))
//	{	fprintf(f3, "%-2d", i1);
//		fscanf(f1, "%d", &i1);
//	}
//	while (!feof(f2))
//	{	fprintf(f3, "%-2d", i2);
//		fscanf(f2, "%d", &i2);
//	}
//	fclose(f1);
//	fclose(f2);
//	rewind(f3);
//    while (1)
//    { fscanf(f3, "%d", &i1);
//	  if (feof(f3)) break;
//	  printf("%3d", i1);
//    }
//	printf("EOF(%d)\n",EOF);
//	fclose(f3);
//	return 0;
//}


//===================================  пример 4  ====================================================
// имеются 2 файла оба упорядочены по возрастанию,
// переписать их в результирующий без нарушения упорядоченности

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f1, *f2, *f3;
//	int i1, i2, j1, j2;
//	int m1[] = { 1, 2, 4, 5 },
//		m2[] = { 1, 3 };
//	char cc;
//	if (!(f1 = fopen("a", "w+")) ||
//		!(f2 = fopen("aa", "w+")) ||
//		!(f3 = fopen("aaa", "w+")))
//	{
//		puts("error");
//		return 0;
//	}
//	for (i1 = 0; i1<sizeof(m1) / sizeof(int); i1++) fprintf(f1, "%2d", m1[i1]);
//	for (i1 = 0; i1<sizeof(m2) / sizeof(int); i1++) fprintf(f2, "%2d", m2[i1]);
//
//	rewind(f1); rewind(f2);
//	j1 = fscanf(f1, "%d", &i1);
//	j2 = fscanf(f2, "%d", &i2);
//	do
//	{	while (i1<i2)
//		{	fprintf(f3, "%2d", i1);
//			if ((j1 = fscanf(f1, "%d", &i1)) == EOF) break;
//		}
//
//		while (i1 >= i2)
//		{	fprintf(f3, "%2d", i2);
//			if ((j2 = fscanf(f2, "%d", &i2)) == EOF) break;
//		}
//	} while (j1 != EOF && j2 != EOF);
//
//	if (j1 != EOF)
//	while (1)
//	{	fprintf(f3, "%2d", i1);
//		if (fscanf(f1, "%d", &i1) == EOF) break;
//	}
//	if (j2 != EOF)
//	while (1)
//	{	fprintf(f3, "%2d", i2);
//		if (fscanf(f2, "%d", &i2) == EOF) break;
//	}
//	fclose(f1);
//	fclose(f2);
//	rewind(f3);
//	while (1)
//	{	fscanf(f3, "%d", &i1);
//	    printf("%3d", i1);
//		if(feof(f3)) break;
//	}
//	printf("\n\n");
//	fclose(f3);
//  return 0;
//}


//===================================  пример 5  ====================================================
// имеются 2 файла(aa - упорядочен по возрастанию, bb - по убыванию),
// переписать их в результирующий файл по возрастанию

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f1, *f2, *f3;
//	int i1, i2, j1, j2;
//	fpos_t n2;
//	int m1[] = { 1},
//		m2[] = { 4, 3, 1 };
//	if (!(f1 = fopen("aa", "w+")) ||
//		!(f2 = fopen("bb", "w+")) ||
//		!(f3 = fopen("cc", "w+")))
//	{
//		puts("error");
//		return 0;
//	}
//	for (i1 = 0; i1<sizeof(m1) / sizeof(int); i1++) fprintf(f1, "%2d", m1[i1]);
//	for (i1 = 0; i1<sizeof(m2) / sizeof(int); i1++) fprintf(f2, "%2d", m2[i1]);
//	rewind(f1);
//	j1=fscanf(f1,"%d",&i1);    // чтение i1 с начала первого файла
//	fseek(f2,-2,2);  
//	fgetpos(f2,&n2);       
//	j2=fscanf(f2, "%d", &i2);  
//	do
//	{
//		while(!feof(f1) && i1<i2)   // выбранный эл-т 1 файла < чем 2 файла
//		{
//			fprintf(f3,"%2d",i1);
//			j1=fscanf(f1,"%d",&i1);
//		}
//		if(feof(f1) && i1<i2 && j1>0)
//		{
//			fprintf(f3,"%2d",i1);   // дозапись последнего элемента из файла
//			j1 = 0;                 // признак, что все переписано из файла f1
//			break;
//		}
//		while (n2>0 && i1>=i2)
//		{
//			fprintf(f3,"%2d",i2);
//			n2-= 2;
//			fsetpos(f2,&n2);
//			j2=fscanf(f2,"%d",&i2);
//		}
//		if (n2<=0 && i1>=i2 && j2>0)  // достигнуто начало файла
//		{
//			fprintf(f3,"%2d",i2);     
//			j2 = 0;
//			break;
//		}
//	} while (!feof(f1) || n2>0);  
//	
//	if(j1>0) fprintf(f3, "%2d", i1);
//	while (!feof(f1))                // 
//	{	fscanf(f1,"%d",&i1);
//		fprintf(f3,"%2d",i1);
//	}
//	if(j2>0) fprintf(f3, "%2d", i2);
//	while (n2>0)
//	{	n2-=2;
//		fsetpos(f2,&n2);
//		j2 = fscanf(f2,"%d",&i2);
//		fprintf(f3,"%2d",i2);
//	}
//    fclose(f1);                   
//	fclose(f2);
//	rewind(f3);
//	while (1)
//	{
//		fscanf(f3, "%d", &i1);
//		printf("%3d", i1);
//		if (feof(f3)) break;
//	}
//	fclose(f3);
//	printf("\n");
//	return 0;
//}




//===================================  пример 6  ====================================================
// записать в файл символьную строку, найти в файле слово max длины и удалить его из файла

//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	FILE *f;
//	fpos_t n1, n2, n3;
//	long i;
//	int dl = 0;
//	char s, *st = "самое длинное слово в строке";          // вариант (например,для отладки) строка посылаемая в файл
//	//char *st;
//	//st = (char *)calloc(100,1);
//	if (!(f = fopen("aa", "w+")))
//	{
//		puts("файл не может быть создан");
//		return 0;
//	}
//	//rewind(stdin);
//	//gets(st);
//	
//	fprintf(f, "%s", st);                // запись исходной строки в файл
//	rewind(f);                           // устанавливаем УТПФ в начало файла + сброс ошибка 
//
//	printf("\n  исходный файл  : \n");
//	while ((s = getc(f)) != EOF)         // посимвольный ввод из файла исходной строки 
//		  printf("%c", s);               // посимвольный вывод исходной строки на экран
//
//	rewind(f);                           // устанавливаем УТПФ в начало файла + сброс ошибка 
//	while (1)                                  // бесконечный цикл     
//	{
//		while (!feof(f))                       // цикл пока на конец файла
//		{                                      // пропуск пробелов в файле
//			fgetpos(f, &n1);                   // позиция считываемого символа                    
//			fscanf(f, "%c", &s);
//			if (s != ' ') break;               // выход из цикла если не пробел
//		}
//		if (feof(f)) break;                    // выход из бесконечного цикла если доcтигли EOF
//		while (!feof(f) && (s != ' ') && (s != '\n')) // движение по буквам текущего слова в файле
//		{
//			fgetpos(f, &n2);                   // позиция последней буквой очередного слова 
//			fscanf(f, "%c", &s);
//		}
//		if (n2-n1>dl)                          // проверка на максимальность текущего слова
//		{                                      // запоминаем
//			dl = n2-n1;                        //      его длину
//			n3 = n1;                           //      его начало
//		}
//	}
//	i = dl;                             // рабочая переменная и с длиной слова
//	rewind(f);                          // устанавливаем УТПФ в начало файла + сброс ошибка 
//	printf("\n\n найденное слово : ");
//	fsetpos(f, &n3);                    // устанавливаем УТПФ в позицию n3 
//	while (!feof(f) && i)               // цикл вывода на экран найденного слова 
//	{                                   // пока не конец файла и длина слова !=0
//		fscanf(f, "%c", &s);            // чтение из файла
//		printf("%c", s);                // вывод на экран
//		i--;                            // выведена одна буква слова
//	}
//	printf("\n");
//	
//	i = dl;                             // можно присвоить любое ненулевое значение
//	n1 = n3; n2 = n1 + dl;              // позиции начала и позиция след за концом слова в файле
//	while (i)                           // цикл удаления найденного слова из файла
//	{
//		fsetpos(f, &n2);                // в позицию для чтения слимвола
//		fscanf(f, "%c", &s);            // чтение символа s из файла
//		if (feof(f))                    // если прочитан конец файла 
//		{
//			i = 0;                      // флаг выхода из цикла while
//			rewind(f);                  
//		}
//		fsetpos(f, &n1);                // в позицию для записи слимвола
//		fprintf(f, "%c", s);            // запись символа s в файл
//		//if (feof(f)) 
//		//	break;
//		n1++; n2++;
//	}
//	rewind(f);                          // устанавливаем УТПФ в начало файла + сброс ошибка 
//	fseek(f, 0, 2);                     // устанавливаем УТПФ в конец файла 
//	i = ftell(f);                       // позиция УТПФ в файле (i- длина файла в байтах)
//	chsize(fileno(f), i -= dl);         // "усекаем" файл на длину удаленного слова
//
//	rewind(f);
//	printf("\n измененный файл : \n");
//	while ((s = getc(f)) != EOF)
//	{
//		if (s == '\r') s = '\n';
//		printf("%c", s);                // посимвольный вывод обновленного файла на экран
//	}
//    printf("\n\n");
//	fclose(f);
//	return 0;
//}



//===================================  пример 7  ====================================================
// записать в файл символьную строку, 
// в функции ввести номера слов и поменять их местами в файле

//void revers(char *name, fpos_t n, fpos_t k)
//{
//	FILE *f;
//	char s1,s2;
//	if (!(f = fopen(name, "r+")))
//	{
//		puts("файл не может быть открыт для изменения");
//		return;
//	}
//	//rewind(f);                                 // устанавливаем УТПФ в начало файла + сброс ошибка 
//	while (n < k)
//	{
//		fsetpos(f, &n);                          // устанавливаем УТПФ в позицию n 
//		fscanf(f,"%c",&s1);
//		fsetpos(f, &k);                          // устанавливаем УТПФ в позицию k 
//		fscanf(f,"%c",&s2);
//		fsetpos(f, &n);                          // устанавливаем УТПФ в позицию n 
//		fprintf(f,"%c",s2);
//		fsetpos(f, &k);                          // устанавливаем УТПФ в позицию k 
//		fprintf(f,"%c",s1);
//		n++; k--;
//	}
//	
//	fclose(f);
//	return;
//}
//
//void poisk(char *name, fpos_t &n1, fpos_t &k1, fpos_t &n2, fpos_t &k2)
//{
//	FILE *f;
//	int nom1, nom2, kol = 0;
//	char s;
//	if (!(f = fopen(name, "r")))
//	{
//		puts("файл не может быть открыт для чтения");
//		return;
//	}
//	printf("\n введите номера 2 слов : ");
//	scanf("%d%d", &nom1, &nom2);               // добавить проверку
//	while (1)                                  // бесконечный цикл     
//	{
//		while (!feof(f))                       // цикл пока на конец файла
//		{                                      // пропуск пробелов в файле                   // позиция считываемого символа                    
//			fscanf(f, "%c", &s);
//			if (s != ' ') break;               // выход из цикла если не пробел
//		}
//		if (feof(f)) break;                    // выход из бесконечного цикла если доcтигли EOF
//		kol++;                                 // найдено новое слово
//		if (kol == nom1) fgetpos(f, &n1);      // найдено начало первого слова
//		else if (kol == nom2) fgetpos(f, &n2); // найдено начало второго слова
//		while (!feof(f) && (s != ' ') && (s != '\n')) // движение по буквам текущего слова в файле
//	       fscanf(f, "%c", &s);
//		if (kol == nom1) fgetpos(f, &k1);      // найден конец первого слова
//		else if (kol == nom2) fgetpos(f, &k2); // найден конец второго слова
//	}
//	n1--; k1-=2;          // корректировка начала и конца первого слова
//	n2--;                 //  ........................... второго слова
//	if (kol==nom2) k2-=1; // второе слово последнее в строке и за EOF УТПФ не перемещается                              второго
//	else k2 -= 2;
//	fclose(f);
//}
//
//int vvod_file(char *name, char *stroka)
//{	
//	FILE *f;
//	if (!(f = fopen(name, "w")))
//	{
//		puts("файл не может быть создан");
//		return 0;
//	}
//    fprintf(f, "%s", stroka);                // запись исходной строки в файл
//	fclose(f);
//	return 1;
//}
//
//void print_file(char *name)
//{
//	FILE *f;
//	char s;
//	if (!(f = fopen(name, "r")))
//	{
//		puts("файл не может быть открыт для чтения");
//		return;
//	}
//    printf("\nфайл  : |");
//	while ((s = getc(f)) != EOF)        // посимвольный ввод из файла исходной строки 
//		printf("%c", s);                // посимвольный вывод исходной строки на экран
//	printf("|");
//	fclose(f);
//}
//
//int main()
//{
//	setlocale(LC_ALL, "Russian");
//	fpos_t n1=0, n2=0, n3=0, n4=0;      // "индексы" искомых слов в строке
//	long i;
//	int dl = 0;                         
//	char s, *st = "12 345 6 78910 00";//"выберие два слова в строке и поменzйте их местами";  // вариант (например,для отладки) строка посылаемая в файл
//	
//	char name[] = "file.txt";                                            // символ 'я' в строке воспринимается как EOF
//	//char *st;
//	//st = (char *)calloc(100,1);
//	//rewind(stdin);
//	//gets(st);
//
//	vvod_file(name, st);            // запись символьной строки в файл
//	print_file(name);               // вывод исходного файла на экран
//	poisk(name, n1, n2, n3, n4);    // выбор слов и поиск начала и конца этих слов
//	revers(name, n1, n2);           // переворот первого слова
//	print_file(name);               // вывод файла после очередного преобразования в нем
//	revers(name, n2+1, n3-1);       // переворот подстроки между выбранными первым и вторым словами
//	print_file(name);               // 
//	revers(name, n3, n4);           // переворот второго слова
//	print_file(name);               // 
//	revers(name, n1, n4);           // переворот от начала первого слова до конца второго слова
//	print_file(name);               // 
//
//	printf("\n\n");
//	return 0;
//}


