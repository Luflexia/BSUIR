//Билет 19 
// Удаление элемента из однонаправленной очереди.

struct queu {// структура с числом и указателем
	int n;
	queu* next;
};

void delette(queu** head, queu** tail, int n) {// основная функция этой проги
	queu* buf, * ptr;// мы создаём два указателя buf будет на предыдущем элементе от удаляемого
					// ptr это удаляемый элемент
	int i = 1;// это счётчик какой элемент по счёту(так как мы удаляем по номеру)
	buf = (*head);
	ptr = buf->next;
	while (1) {
		if (n == 0) {// если мы ввели 1 то мы хотим удалить голову и этот if отвечает за это
			(*head) = (*head)->next;// переводим указатель головы на следующий элемент
			free(buf);// удаляем из памяти первый элемент(предыдущую голову)
			break;// и выходим из цикла
		}
		else if (!ptr->next && n==i) {// если нам надо удалить хвост
			(*tail) = buf; // переводим указатель хвоста на предыдущий элемент
			buf->next = nullptr;// обнуляем указатель нового хвоста
			free(ptr);// удаляем из памяти предыдущий хвост
			break;// выходим из цикла
		}
		else if (i == n) {// если мы удаляем какой-то элемент под номером n
			buf->next = ptr->next;// мы можно сказать переводим указатель элемента перед удаляемым на элемент после удаляемого
			free(ptr);// удаляем элемент из памяти
			break;// выходим из цикла
		}
		i++;// увеличиваем счётчик
		ptr = ptr->next;// переходим на следующий элемент
		buf = buf->next;
	}
}
int main() {
	queu* head, * tail;
	head = tail = nullptr;

	int n;
	printf("Введите число номер числа которое хотите удалить\n");
	while (!(scanf("%d", &n) && n>0)) {// тут идёт проверка ввели ли вы число и это число лежит ли в пределах
												// (0,5]
		printf("Введено не верное число\n");
		rewind(stdin);
	}
	delette(&head, &tail, n-1);// в функцию отправляем n-1 так как моя функция работает если мы начинаем считать с 0
	return 0;
}